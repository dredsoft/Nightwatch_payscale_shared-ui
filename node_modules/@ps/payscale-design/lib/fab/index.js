'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Fab = function (_React$Component) {
    _inherits(Fab, _React$Component);

    function Fab(props) {
        _classCallCheck(this, Fab);

        return _possibleConstructorReturn(this, (Fab.__proto__ || Object.getPrototypeOf(Fab)).call(this, props));
    }

    _createClass(Fab, [{
        key: 'render',
        value: function render() {
            var _props = this.props,
                color = _props.color,
                size = _props.size,
                className = _props.className,
                children = _props.children;

            return _react2.default.createElement(
                'a',
                { className: 'pxl-fab pxl-fab-' + color + ' pxl-fab-' + size + ' ' + className },
                _react2.default.createElement(
                    'span',
                    { className: 'pxl-fab__icon' },
                    children
                )
            );
        }
    }]);

    return Fab;
}(_react2.default.Component);

exports.default = Fab;


Fab.propTypes = {
    className: _propTypes2.default.string,
    color: _propTypes2.default.oneOf(['default', 'primary', 'secondary', 'tertiary']),
    size: _propTypes2.default.oneOf(['sm', 'md', 'lg', 'xl'])
};

Fab.defaultProps = {
    className: '',
    color: 'default',
    size: 'md'
};