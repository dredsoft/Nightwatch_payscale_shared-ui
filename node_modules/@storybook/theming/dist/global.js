"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var memoizerific_1 = __importDefault(require("memoizerific"));
exports.createReset = memoizerific_1.default(1)(function (_a) {
    var typography = _a.typography;
    return ({
        body: {
            fontFamily: typography.fonts.base,
            fontSize: typography.size.s3,
            margin: 0,
            WebkitFontSmoothing: 'antialiased',
            MozOsxFontSmoothing: 'grayscale',
            WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',
            WebkitOverflowScrolling: 'touch',
        },
        '*': {
            boxSizing: 'border-box',
        },
        'h1, h2, h3, h4, h5, h6': {
            fontWeight: typography.weight.regular,
            margin: 0,
            padding: 0,
        },
        'button, input, textarea, select': {
            outline: 'none',
            fontFamily: 'inherit',
            fontSize: 'inherit',
            boxSizing: 'border-box',
        },
        sub: {
            fontSize: '0.8em',
            bottom: '-0.2em',
        },
        sup: {
            fontSize: '0.8em',
            top: '-0.2em',
        },
        'b, em': {
            fontWeight: typography.weight.bold,
        },
        hr: {
            border: 'none',
            borderTop: '1px solid silver',
            clear: 'both',
            marginBottom: '1.25rem',
        },
        code: {
            fontFamily: typography.fonts.mono,
            WebkitFontSmoothing: 'antialiased',
            MozOsxFontSmoothing: 'grayscale',
            display: 'inline-block',
            paddingLeft: 2,
            paddingRight: 2,
            verticalAlign: 'baseline',
            color: 'inherit',
        },
        pre: {
            fontFamily: typography.fonts.mono,
            WebkitFontSmoothing: 'antialiased',
            MozOsxFontSmoothing: 'grayscale',
            lineHeight: '18px',
            padding: '11px 1rem',
            whiteSpace: 'pre-wrap',
            color: 'inherit',
            borderRadius: 3,
            margin: '1rem 0',
        },
    });
});
exports.createGlobal = memoizerific_1.default(1)(function (_a) {
    var color = _a.color, background = _a.background, typography = _a.typography;
    var resetStyles = exports.createReset({ typography: typography });
    return __assign({}, resetStyles, { body: __assign({}, resetStyles.body, { color: color.defaultText, background: background.app, overflowY: 'auto', overflowX: 'hidden' }), hr: __assign({}, resetStyles.hr, { borderTop: "1px solid " + color.border }) });
});
