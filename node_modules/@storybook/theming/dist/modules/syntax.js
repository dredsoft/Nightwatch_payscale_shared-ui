"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var utils_1 = require("../utils");
var convertColors = function (colors) {
    return Object.entries(colors).reduce(function (acc, _a) {
        var k = _a[0], v = _a[1];
        var _b;
        return (__assign({}, acc, (_b = {}, _b[k] = utils_1.mkColor(v), _b)));
    }, {});
};
exports.create = function (_a) {
    var colors = _a.colors, mono = _a.mono;
    var colorsObjs = convertColors(colors);
    return {
        token: {
            fontFamily: mono,
            WebkitFontSmoothing: 'antialiased',
            '&.comment': __assign({}, colorsObjs.green1, { fontStyle: 'italic' }),
            '&.prolog': __assign({}, colorsObjs.green1, { fontStyle: 'italic' }),
            '&.doctype': __assign({}, colorsObjs.green1, { fontStyle: 'italic' }),
            '&.cdata': __assign({}, colorsObjs.green1, { fontStyle: 'italic' }),
            '&.string': colorsObjs.red1,
            '&.punctuation': colorsObjs.gray1,
            '&.operator': colorsObjs.gray1,
            '&.url': colorsObjs.cyan1,
            '&.symbol': colorsObjs.cyan1,
            '&.number': colorsObjs.cyan1,
            '&.boolean': colorsObjs.cyan1,
            '&.variable': colorsObjs.cyan1,
            '&.constant': colorsObjs.cyan1,
            '&.inserted': colorsObjs.cyan1,
            '&.atrule': colorsObjs.blue1,
            '&.keyword': colorsObjs.blue1,
            '&.attr-value': colorsObjs.blue1,
            '&.function': colorsObjs.gray1,
            '&.deleted': colorsObjs.red2,
            '&.important': {
                fontWeight: 'bold',
            },
            '&.bold': {
                fontWeight: 'bold',
            },
            '&.italic': {
                fontStyle: 'italic',
            },
            '&.class-name': colorsObjs.cyan2,
            '&.tag': colorsObjs.red3,
            '&.selector': colorsObjs.red3,
            '&.attr-name': colorsObjs.red4,
            '&.property': colorsObjs.red4,
            '&.regex': colorsObjs.red4,
            '&.entity': colorsObjs.red4,
            '&.directive.tag .tag': __assign({ background: '#ffff00' }, colorsObjs.gray1),
        },
        'language-json .token.boolean': colorsObjs.blue1,
        'language-json .token.number': colorsObjs.blue1,
        'language-json .token.property': colorsObjs.cyan2,
        namespace: {
            opacity: 0.7,
        },
    };
};
