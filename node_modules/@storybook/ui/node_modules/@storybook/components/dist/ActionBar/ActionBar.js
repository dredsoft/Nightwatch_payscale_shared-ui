"use strict";

require("core-js/modules/es6.object.define-property");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ActionBar = exports.ActionButton = void 0;

require("core-js/modules/es6.array.map");

require("core-js/modules/es6.string.bold");

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _theming = require("@storybook/theming");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Container = _theming.styled.div(function (_ref) {
  var theme = _ref.theme;
  return {
    position: 'absolute',
    bottom: 0,
    right: 0,
    maxWidth: '100%',
    display: 'flex',
    background: theme.background.content
  };
});

var ActionButton = _theming.styled.button(function (_ref2) {
  var theme = _ref2.theme;
  return {
    border: '0 none',
    padding: '4px 10px',
    cursor: 'pointer',
    display: 'flex',
    alignItems: 'center',
    color: theme.color.defaultText,
    background: theme.background.content,
    fontSize: 12,
    lineHeight: '16px',
    fontWeight: theme.typography.weight.bold,
    borderTop: "1px solid ".concat(theme.appBorderColor),
    borderLeft: "1px solid ".concat(theme.appBorderColor),
    marginLeft: -1,
    borderRadius: "4px 0 0 0",
    '&:not(:last-child)': {
      borderRight: "1px solid ".concat(theme.appBorderColor)
    },
    '& + *': {
      borderLeft: "1px solid ".concat(theme.appBorderColor),
      borderRadius: 0
    },
    '&:focus': {
      boxShadow: "".concat(theme.color.secondary, " 0 -3px 0 0 inset"),
      outline: '0 none'
    }
  };
});

exports.ActionButton = ActionButton;
ActionButton.displayName = 'ActionButton';

var ActionBar = function ActionBar(_ref3) {
  var actionItems = _ref3.actionItems;
  return _react.default.createElement(Container, null, actionItems.map(function (_ref4, index) {
    var title = _ref4.title,
        onClick = _ref4.onClick;
    return _react.default.createElement(ActionButton // eslint-disable-next-line react/no-array-index-key
    , {
      key: index,
      onClick: onClick
    }, title);
  }));
};

exports.ActionBar = ActionBar;
ActionBar.displayName = "ActionBar";
ActionBar.propTypes = {
  actionItems: _propTypes.default.arrayOf(_propTypes.default.shape({
    title: _propTypes.default.node.isRequired,
    onClick: _propTypes.default.func.isRequired
  })).isRequired
};