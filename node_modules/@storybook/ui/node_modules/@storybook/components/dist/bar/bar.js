"use strict";

require("core-js/modules/es6.object.define-property");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FlexBar = exports.Bar = void 0;

require("core-js/modules/es7.symbol.async-iterator");

require("core-js/modules/es6.symbol");

require("core-js/modules/es6.array.is-array");

require("core-js/modules/es6.array.index-of");

require("core-js/modules/web.dom.iterable");

require("core-js/modules/es6.array.iterator");

require("core-js/modules/es6.object.keys");

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _theming = require("@storybook/theming");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

var Side = _theming.styled.div({
  display: 'flex',
  flexBasis: 'auto',
  flexShrink: 0
}, function (_ref) {
  var left = _ref.left;
  return left ? {
    '& > *': {
      marginLeft: 15
    }
  } : {};
}, function (_ref2) {
  var right = _ref2.right;
  return right ? {
    marginLeft: 30,
    '& > *': {
      marginRight: 15
    }
  } : {};
});

Side.displayName = 'Side';

var Bar = _theming.styled.div(function (_ref3) {
  var theme = _ref3.theme;
  return {
    color: theme.barTextColor,
    height: 40
  };
}, function (_ref4) {
  var theme = _ref4.theme,
      _ref4$scroll = _ref4.scroll,
      scroll = _ref4$scroll === void 0 ? true : _ref4$scroll;
  return scroll ? {
    overflow: 'auto',
    overflowX: 'auto',
    overflowY: 'hidden',
    scrollbarWidth: ['slim', 3],
    scrollbarColor: 'transparent transparent',
    '&:hover': {
      scrollbarWidth: ['none', 0]
    },
    '&::-webkit-scrollbar': {
      height: 3,
      width: 3,
      background: 'transparent',
      boxShadow: 'none',
      display: 'none'
    },
    '&:hover::-webkit-scrollbar': {
      height: 3,
      width: 3,
      background: 'transparent',
      display: 'block'
    },
    '&::-webkit-scrollbar-track': {
      borderRadius: 0,
      background: 'transparent',
      opacity: 0,
      border: '0 none',
      boxShadow: 'none',
      height: 0,
      width: 0
    },
    '&::-webkit-scrollbar-thumb': {
      borderRadius: 0,
      background: theme.color.border,
      boxShadow: 'none'
    },
    '&::-webkit-scrollbar-track-piece': {
      display: 'none',
      border: '0 none',
      opacity: 0,
      visibility: 'hidden'
    }
  } : {
    overflow: 'visible',
    overflowX: 'visible',
    overflowY: 'visible'
  };
}, function (_ref5) {
  var theme = _ref5.theme,
      border = _ref5.border;
  return border ? {
    background: "".concat(theme.barBg, " linear-gradient(to bottom, transparent calc(100% - 1px), ").concat(theme.appBorderColor, " calc(100% - 1px))")
  } : {};
});

exports.Bar = Bar;
Bar.displayName = 'Bar';

var BarInner = _theming.styled.div({
  display: 'flex',
  justifyContent: 'space-between',
  position: 'relative',
  whiteSpace: 'nowrap',
  height: 40
});

var FlexBar = function FlexBar(_ref6) {
  var children = _ref6.children,
      rest = _objectWithoutProperties(_ref6, ["children"]);

  var _Children$toArray = _react.Children.toArray(children),
      _Children$toArray2 = _slicedToArray(_Children$toArray, 2),
      left = _Children$toArray2[0],
      right = _Children$toArray2[1];

  return _react.default.createElement(Bar, rest, _react.default.createElement(BarInner, null, _react.default.createElement(Side, {
    left: true
  }, left), right ? _react.default.createElement(Side, {
    right: true
  }, right) : null));
};

exports.FlexBar = FlexBar;
FlexBar.displayName = "FlexBar";
FlexBar.displayName = 'FlexBar';
FlexBar.propTypes = {
  children: _propTypes.default.node.isRequired
};