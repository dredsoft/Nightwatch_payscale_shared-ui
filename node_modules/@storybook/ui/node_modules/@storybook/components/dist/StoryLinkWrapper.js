"use strict";

require("core-js/modules/es6.object.define-property");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = StoryLinkWrapper;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _addonActions = require("@storybook/addon-actions");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

/* eslint-disable import/no-extraneous-dependencies */
// This is allows us to test whether the link works via the actions addon
var onLinkClick = (0, _addonActions.action)('onLinkClick');

function StoryLinkWrapper(_ref) {
  var href = _ref.href,
      passHref = _ref.passHref,
      children = _ref.children;

  var child = _react.Children.only(children);

  return _react.default.cloneElement(child, {
    href: passHref && href,
    onClick: function onClick(e) {
      e.preventDefault();
      onLinkClick(href);
    }
  });
}

StoryLinkWrapper.propTypes = {
  href: _propTypes.default.string.isRequired,
  passHref: _propTypes.default.bool,
  children: _propTypes.default.node.isRequired
};
StoryLinkWrapper.defaultProps = {
  passHref: false
};