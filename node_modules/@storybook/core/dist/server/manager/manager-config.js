"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _presets = _interopRequireDefault(require("../presets"));

var _customPresets = _interopRequireDefault(require("../common/custom-presets"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

async function getManagerWebpackConfig(options, presets) {
  const babelOptions = await presets.apply('babel', {}, options);
  const entries = await presets.apply('managerEntries', [], options);
  return presets.apply('managerWebpack', {}, Object.assign({}, options, {
    babelOptions,
    entries
  }));
}

var _default = async options => {
  const {
    corePresets = [],
    overridePresets = []
  } = options,
        restOptions = _objectWithoutPropertiesLoose(options, ["corePresets", "overridePresets"]);

  const presetsConfig = [...corePresets, require.resolve('../common/babel-cache-preset.js'), ...(0, _customPresets.default)(options), ...overridePresets];
  const presets = (0, _presets.default)(presetsConfig);
  return getManagerWebpackConfig(Object.assign({}, restOptions, {
    presets
  }), presets);
};

exports.default = _default;